// SinGL v0.04.03
// file assembled from mesh/src/Vertex.sg
// ---   *   ---   *   ---
// LIBRE BOILERPASTE
// GENERATED BY AR/AVTOMAT
//
// LICENSED UNDER GNU GPL3
// BE A BRO AND INHERIT
//
// COPYLEFT ANON 2023
// ---   *   ---   *   ---

#ifndef __VERTEX_H__
#define __VERTEX_H__



// ---   *   ---   *   ---
// deps

  #include <glm/vec4.hpp>
  #include "sin/shader/Params.hpp"


// ---   *   ---   *   ---
// ROM



// ---   *   ---   *   ---


namespace shader::mesh {
  const char* Vertex_vert=R"glsl(
AUTHOR "IBN-3DILA";
in uvec4;
uniform mat4;
uniform mat4;

layout(std430)
  buffer _Tile_Indices {
    uint;
  }
Tile_Indices;
  out vec2;
  flat out uint;
  const uint;
  const float;
  const uint;
  const uint;
  const uint;
  const uint;
  const uint;
  const uint;
  const uint;
  const uint;
  const bool;
  const bool;
  float;
  float;
  float;

vec2;
vec4;
vec4;



  )glsl";


// ---   *   ---   *   ---


  const char* _DULL_SYNTAX_v_Vertex_vert[]={
      Vertex_vert
  };

  const char* Vertex_frag=R"glsl(
in vec2;
flat in uint;



  )glsl";


// ---   *   ---   *   ---


  const char* _DULL_SYNTAX_f_Vertex_frag[]={
      Vertex_frag
  };

  const Params Vertex={
    .source_v=_DULL_SYNTAX_v_Vertex_vert,
    .source_v_sz=1,
    .source_f=_DULL_SYNTAX_f_Vertex_frag,
    .source_f_sz=1,
    .attrs={
      "uvec4"
    },
    .num_attrs=1,
    .uniforms={
      "mat4",
      "mat4"
    },
    .num_uniforms=2,
    .ubos={

    },
    .num_ubos=0,
    .ssbos={

    },
    .num_ssbos=0,
    .samplers={

    },
    .num_samplers=0,
  };
};


// ---   *   ---   *   ---



// ---   *   ---   *   ---


#endif // __VERTEX_H__


