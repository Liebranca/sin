// SinGL v0.05.0
// file assembled from Solid v0.00.2b
// ---   *   ---   *   ---
// LIBRE BOILERPASTE
// GENERATED BY AR/AVTOMAT
//
// LICENSED UNDER GNU GPL3
// BE A BRO AND INHERIT
//
// COPYLEFT IBN-3DILA 2023
// ---   *   ---   *   ---

#ifndef __SOLID_H__
#define __SOLID_H__



// ---   *   ---   *   ---
// deps

  #include <glm::vec4>
  #include "sin/shader/Params.hpp"
  #include "sin/mesh/Vertex.hpp"


// ---   *   ---   *   ---
// ROM



// ---   *   ---   *   ---

namespace shader::sin::mesh {
  const char* Solid_vx_src=R"glsl(
void main(void) {
vec4 co     = extract_xyz();
gl_Position = apply_transform(co);
Tex_Coords  = extract_tex();
};
)glsl";

  const char* Solid_px_src=R"glsl(
  uniform sampler2DArray Surface;
  out vec4 Frag_Color;
void main(void) {
Frag_Color=texture(
Surface,vec3(Tex_Coords,0)
);
};
)glsl";


  const char* g_Solid_vx[]={
    shader::version_vx,
    shader::sin::mesh::Vertex_vx_src,
    Solid_vx_src
  };

  const char* g_Solid_px[]={
    shader::version_px,
    Solid_px_src
  };

  const Params ={
    .source_v     = g_Solid_vx,
    .source_v_sz  = 3,

    .source_f     = g_Solid_px,
    .source_f_sz  = 2,

    .attrs={
      
    },
    .num_attrs=0,

    .uniforms={
      
    },
    .num_uniforms=0,

    .ubos={
      
    },
    .num_ubos=0,

    .ssbos={
      
    },
    .num_ssbos=0,

    .samplers={
      Surface
    },
    .num_samplers=1,


  };



}; // shader::sin::mesh


// ---   *   ---   *   ---


#endif // __SOLID_H__


